"use client";

import React, { useState, useRef, useEffect } from "react";
import { motion } from "framer-motion";
import { FaPaperPlane, FaUser, FaRobot } from "react-icons/fa";

export default function Writing() {
  const [messages, setMessages] = useState([
    {
      role: "assistant",
      content: "ğŸ‘‹ Hey there! What would you like me to write for you today?",
    },
  ]);
  const [input, setInput] = useState("");
  const chatEndRef = useRef(null);

  // Auto scroll to bottom when new message appears
  useEffect(() => {
    chatEndRef.current?.scrollIntoView({ behavior: "smooth" });
  }, [messages]);

  const handleSend = () => {
    if (!input.trim()) return;

    // Add user message
    const userMsg = { role: "user", content: input };
    setMessages((prev) => [...prev, userMsg]);
    setInput("");

    // Fake AI response (replace this with API call later)
    setTimeout(() => {
      const aiMsg = {
        role: "assistant",
        content: `âœ¨ Here's something for "${userMsg.content}" â€” a creative and structured writing example generated by AI.`,
      };
      setMessages((prev) => [...prev, aiMsg]);
    }, 1200);
  };

  const handleKeyDown = (e) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      handleSend();
    }
  };

  return (
    <div className="flex flex-col h-[calc(100vh-4rem)] bg-gradient-to-b from-[#071025] via-[#061224] to-[#050615] text-white">
      {/* Chat container */}
      <div className="flex-1 overflow-y-auto px-6 py-8 space-y-6 scrollbar-thin scrollbar-thumb-white/10 scrollbar-track-transparent">
        {messages.map((msg, i) => (
          <motion.div
            key={i}
            initial={{ opacity: 0, y: 8 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.25 }}
            className={`flex items-start gap-3 ${
              msg.role === "user" ? "justify-end" : "justify-start"
            }`}
          >
            {msg.role === "assistant" && (
              <div className="w-9 h-9 rounded-full bg-cyan-500/10 border border-cyan-400/20 flex items-center justify-center">
                <FaRobot className="text-cyan-300" />
              </div>
            )}

            <div
              className={`max-w-[75%] px-5 py-3 rounded-2xl leading-relaxed shadow-sm ${
                msg.role === "user"
                  ? "bg-cyan-600/20 border border-cyan-400/30"
                  : "bg-white/5 border border-white/10"
              }`}
            >
              {msg.content}
            </div>

            {msg.role === "user" && (
              <div className="w-9 h-9 rounded-full bg-cyan-400/10 border border-cyan-400/20 flex items-center justify-center">
                <FaUser className="text-cyan-300" />
              </div>
            )}
          </motion.div>
        ))}
        <div ref={chatEndRef} />
      </div>

      {/* Input area */}
      <div className="border-t border-white/10 p-4">
        <div className="max-w-4xl mx-auto flex items-center gap-3 bg-white/5 border border-white/10 rounded-2xl px-4 py-2">
          <textarea
            rows={1}
            placeholder="Type your prompt here..."
            className="flex-1 bg-transparent outline-none text-white resize-none placeholder:text-slate-400"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={handleKeyDown}
          />
          <motion.button
            whileTap={{ scale: 0.9 }}
            onClick={handleSend}
            className="p-3 rounded-full bg-cyan-500/20 hover:bg-cyan-500/30 border border-cyan-400/30 transition"
          >
            <FaPaperPlane className="text-cyan-300 w-5 h-5" />
          </motion.button>
        </div>
      </div>
    </div>
  );
}
